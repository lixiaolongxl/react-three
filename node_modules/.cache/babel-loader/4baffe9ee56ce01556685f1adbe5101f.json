{"ast":null,"code":"import deepEqual from 'fast-deep-equal';\nconst globalCache = [];\n\nfunction handleAsset(fn, cache, args, lifespan = 0, preload = false) {\n  for (const entry of cache) {\n    // Find a match\n    if (deepEqual(args, entry.args)) {\n      // If we're pre-loading and the element is present, just return\n      if (preload) return; // If an error occurred, throw\n\n      if (entry.error) throw entry.error; // If a response was successful, return\n\n      if (entry.response) return entry.response; // If the promise is still unresolved, throw\n\n      throw entry.promise;\n    }\n  } // The request is new or has changed.\n\n\n  const entry = {\n    args,\n    promise: // Make the promise request.\n    fn(...args) // Response can't be undefined or else the loop above wouldn't be able to return it\n    // This is for promises that do not return results (delays for instance)\n    .then(response => entry.response = response != null ? response : true).catch(e => entry.error = e != null ? e : 'unknown error').then(() => {\n      if (lifespan > 0) {\n        setTimeout(() => {\n          const index = cache.indexOf(entry);\n          if (index !== -1) cache.splice(index, 1);\n        }, lifespan);\n      }\n    })\n  };\n  cache.push(entry);\n  if (!preload) throw entry.promise;\n}\n\nfunction clear(cache, ...args) {\n  if (args === undefined || args.length === 0) cache.splice(0, cache.length);else {\n    const entry = cache.find(entry => deepEqual(args, entry.args));\n\n    if (entry) {\n      const index = cache.indexOf(entry);\n      if (index !== -1) cache.splice(index, 1);\n    }\n  }\n}\n\nfunction createAsset(fn, lifespan = 0) {\n  const cache = [];\n  return {\n    /**\n     * @throws Suspense Promise if asset is not yet ready\n     * @throws Error if the promise rejected for some reason\n     */\n    read: (...args) => handleAsset(fn, cache, args, lifespan),\n    preload: (...args) => void handleAsset(fn, cache, args, lifespan, true),\n    clear: (...args) => clear(cache, ...args),\n    peek: (...args) => {\n      var _cache$find;\n\n      return (_cache$find = cache.find(entry => deepEqual(args, entry.args))) == null ? void 0 : _cache$find.response;\n    }\n  };\n}\n\nfunction useAsset(fn, ...args) {\n  return handleAsset(fn, globalCache, args, useAsset.lifespan);\n}\n\nuseAsset.lifespan = 0;\n\nuseAsset.clear = (...args) => clear(globalCache, ...args);\n\nuseAsset.preload = (fn, ...args) => void handleAsset(fn, globalCache, args, useAsset.lifespan, true);\n\nuseAsset.peek = (...args) => {\n  var _globalCache$find;\n\n  return (_globalCache$find = globalCache.find(entry => deepEqual(args, entry.args))) == null ? void 0 : _globalCache$find.response;\n};\n\nexport { createAsset, useAsset };","map":{"version":3,"sources":["/Users/lixiaolong/Desktop/react-thtee/node_modules/use-asset/dist/index.js"],"names":["deepEqual","globalCache","handleAsset","fn","cache","args","lifespan","preload","entry","error","response","promise","then","catch","e","setTimeout","index","indexOf","splice","push","clear","undefined","length","find","createAsset","read","peek","_cache$find","useAsset","_globalCache$find"],"mappings":"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","sourcesContent":["import deepEqual from 'fast-deep-equal';\n\nconst globalCache = [];\n\nfunction handleAsset(fn, cache, args, lifespan = 0, preload = false) {\n  for (const entry of cache) {\n    // Find a match\n    if (deepEqual(args, entry.args)) {\n      // If we're pre-loading and the element is present, just return\n      if (preload) return; // If an error occurred, throw\n\n      if (entry.error) throw entry.error; // If a response was successful, return\n\n      if (entry.response) return entry.response; // If the promise is still unresolved, throw\n\n      throw entry.promise;\n    }\n  } // The request is new or has changed.\n\n\n  const entry = {\n    args,\n    promise: // Make the promise request.\n    fn(...args) // Response can't be undefined or else the loop above wouldn't be able to return it\n    // This is for promises that do not return results (delays for instance)\n    .then(response => entry.response = response != null ? response : true).catch(e => entry.error = e != null ? e : 'unknown error').then(() => {\n      if (lifespan > 0) {\n        setTimeout(() => {\n          const index = cache.indexOf(entry);\n          if (index !== -1) cache.splice(index, 1);\n        }, lifespan);\n      }\n    })\n  };\n  cache.push(entry);\n  if (!preload) throw entry.promise;\n}\n\nfunction clear(cache, ...args) {\n  if (args === undefined || args.length === 0) cache.splice(0, cache.length);else {\n    const entry = cache.find(entry => deepEqual(args, entry.args));\n\n    if (entry) {\n      const index = cache.indexOf(entry);\n      if (index !== -1) cache.splice(index, 1);\n    }\n  }\n}\n\nfunction createAsset(fn, lifespan = 0) {\n  const cache = [];\n  return {\n    /**\n     * @throws Suspense Promise if asset is not yet ready\n     * @throws Error if the promise rejected for some reason\n     */\n    read: (...args) => handleAsset(fn, cache, args, lifespan),\n    preload: (...args) => void handleAsset(fn, cache, args, lifespan, true),\n    clear: (...args) => clear(cache, ...args),\n    peek: (...args) => {\n      var _cache$find;\n\n      return (_cache$find = cache.find(entry => deepEqual(args, entry.args))) == null ? void 0 : _cache$find.response;\n    }\n  };\n}\n\nfunction useAsset(fn, ...args) {\n  return handleAsset(fn, globalCache, args, useAsset.lifespan);\n}\n\nuseAsset.lifespan = 0;\n\nuseAsset.clear = (...args) => clear(globalCache, ...args);\n\nuseAsset.preload = (fn, ...args) => void handleAsset(fn, globalCache, args, useAsset.lifespan, true);\n\nuseAsset.peek = (...args) => {\n  var _globalCache$find;\n\n  return (_globalCache$find = globalCache.find(entry => deepEqual(args, entry.args))) == null ? void 0 : _globalCache$find.response;\n};\n\nexport { createAsset, useAsset };\n"]},"metadata":{},"sourceType":"module"}